var documenterSearchIndex = {"docs":
[{"location":"upgrade_guide/#Upgrade-Guide","page":"Upgrade Guide","title":"Upgrade Guide","text":"","category":"section"},{"location":"upgrade_guide/#ITensors.jl","page":"Upgrade Guide","title":"ITensors.jl","text":"","category":"section"},{"location":"upgrade_guide/#Deletions,-deprecations","page":"Upgrade Guide","title":"Deletions, deprecations","text":"","category":"section"},{"location":"upgrade_guide/","page":"Upgrade Guide","title":"Upgrade Guide","text":"IndexSet (deleted).\ncommonind(a::ITensor, b::ITensor) now errors if there is no common index, before it returned nothing. Maybe define checkcommonind?\nadjoint(is::Tuple{Vararg{Index}}): deleted, use prime.(is).\ninds kwarg of swapprime, replaceprime, etc. for filtering.\nuniqueinds(a::ITensor, is::Indices): remove in favor of setdiff(inds(a), is).\nunioninds(is1:: Indices, is2::Indices): remove in favor of union(is1, is2).\nhassameinds(is1:: Indices, is2::Indices): remove in favor of issetequal(is1, is2).\nhassameinds(a:: ITensor, is::Indices): remove in favor of issetequal(inds(a), is).\n!(is:: Indices): delete.\nITensors.using_auto_fermion: removed for now.","category":"page"},{"location":"upgrade_guide/#Removal-of-sublibraries","page":"Upgrade Guide","title":"Removal of sublibraries","text":"","category":"section"},{"location":"upgrade_guide/","page":"Upgrade Guide","title":"Upgrade Guide","text":"ITensors.ContractionSequenceOptimization (functionality moved to ITensorNetworks.jl).\nITensors.ITensorVisualizationCore (plan to move to external VisualizationInterface.jl package).\nITensors.LazyApply (move to QuantumOperatorAlgebra.jl).\nITensors.Ops (move to QuantumOperatorAlgebra.jl).\nITensors.QuantumNumbers (move to GradedArrays.jl).\nITensors.SiteTypes (move to QuantumOperatorAlgebra.jl).\nITensors.SmallStrings (delete, no replacement, just using String/Symbol).\nITensors.TagSets (delete, no replacement, just using Dict, String, Symbol, etc.).","category":"page"},{"location":"upgrade_guide/#ITensorMPS.jl","page":"Upgrade Guide","title":"ITensorMPS.jl","text":"","category":"section"},{"location":"upgrade_guide/#Deletions,-deprecations,-changed-behavior","page":"Upgrade Guide","title":"Deletions, deprecations, changed behavior","text":"","category":"section"},{"location":"upgrade_guide/","page":"Upgrade Guide","title":"Upgrade Guide","text":"ITensorMPS.productMPS: deleted.\nOutput of siteinds(::MPS): if there is no site index, what did it output? Right now it errors.\nOutput of siteinds(::MPS, j::Int): if there is no site index, what did it output? Right now it errors.\nITensorMPS.MPS: swap ordering of sites, state -> state, sites.\nITensorMPS.MPS([::Type{ElT} = Float64, ]sites; linkdims=1): Made an MPS with empty tensors of a certain bond dimension, probably not a good idea to begin with since it is hard to define when QN symmetries are involved. Maybe define it to be a product state of ”0”.\nITensorMPS.random_mps: linkdims changed to maxdim.","category":"page"},{"location":"upgrade_guide/","page":"Upgrade Guide","title":"Upgrade Guide","text":"","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [ITensorDocsNext]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"EditURL = \"../../examples/README.jl\"","category":"page"},{"location":"#Documentation-for-in-progress-rewrite-of-the-ITensor-ecosystem","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"","category":"section"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"A preview of the documentation for an in-progress rewrite of the ITensor Julia ecosystem. You can find the documentation here.","category":"page"},{"location":"#Support","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Support","text":"","category":"section"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"<img src=\"assets/CCQ.png\" width=\"20%\" alt=\"Flatiron Center for Computational Quantum Physics logo.\">","category":"page"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"ITensor is supported by the Flatiron Institute, a division of the Simons Foundation.","category":"page"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"","category":"page"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"This page was generated using Literate.jl.","category":"page"},{"location":"","page":"Documentation for in-progress rewrite of the ITensor ecosystem","title":"Documentation for in-progress rewrite of the ITensor ecosystem","text":"","category":"page"},{"location":"ecosystem_overview/#ITensor-Ecosystem-Overview","page":"ITensor Ecosystem Overview","title":"ITensor Ecosystem Overview","text":"","category":"section"},{"location":"ecosystem_overview/","page":"ITensor Ecosystem Overview","title":"ITensor Ecosystem Overview","text":"graph TD\n    ITensors(ITensors.jl) --> ITensorBase(ITensorBase.jl)\n    ITensorBase --> NamedDimsArrays(NamedDimsArrays.jl)\n    NamedDimsArrays --> SparseArraysBase(SparseArraysBase.jl)\n    NamedDimsArrays --> DiagonalArrays(DiagonalArrays.jl)\n    NamedDimsArrays --> BlockSparseArrays(BlockSparseArrays.jl)\n    NamedDimsArrays --> FusionTensors(FusionTensors.jl)\n    BlockSparseArrays --> SparseArraysBase\n    BlockSparseArrays --> DiagonalArrays\n    BlockSparseArrays --> GradedUnitRanges(GradedUnitRanges.jl)\n    DiagonalArrays --> SparseArraysBase\n    FusionTensors --> BlockSparseArrays\n    FusionTensors --> GradedUnitRanges\n    GradedUnitRanges --> SymmetrySectors(SymmetrySectors.jl)","category":"page"},{"location":"ecosystem_overview/","page":"ITensor Ecosystem Overview","title":"ITensor Ecosystem Overview","text":"","category":"page"}]
}
